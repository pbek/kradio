name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
#  build-snap:
#    runs-on: ubuntu-18.04
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install Snapcraft
#      uses: samuelmeuli/action-snapcraft@v1
#      with:
#        use_lxd: true
#        # `snapcraft export-login --snaps kradio --channels edge,stable -`, token valid for one year
##        snapcraft_token: ${{ secrets.SNAP_TOKEN_GH }}
#    - name: Build for Snapcraft
#      run: sg lxd -c 'snapcraft --use-lxd' && ls
  build-appimage:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt update && sudo apt -y --fix-missing install extra-cmake-modules libboost-dev qtmultimedia5-dev libkf5plasma-dev gettext libkf5xmlgui-dev libkf5kdelibs4support-dev ffmpeg libavcodec-dev libavformat-dev libavdevice-dev libavutil-dev libswscale-dev libpostproc-dev libswresample-dev libasound2-dev liblirc-dev libogg-dev libvorbis-dev libsndfile1-dev libmp3lame-dev libmms-dev appstream
    - name: Install appimage-builder
      run: sudo pip3 install appimage-builder
    - name: Install appimagetool
      run: |
        sudo apt install -y python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot
        sudo wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
        sudo chmod +x /usr/local/bin/appimagetool
    - name: Run cmake
      run: cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RELEASE
    - name: Run make
      run: make
    - name: Run make install
      run: make install DESTDIR=AppDir
    - name: Move desktop file
      run: mv AppDir/usr/share/applications/kradio5.desktop AppDir/usr/share/applications/org.kde.kradio5.desktop
#    - run: find ./AppDir
    - name: Bundle AppImage
      run: appimage-builder --skip-test
#    - run: find ./AppDir/ && ls -al .
#    - name: Create AppDir archive
#      run: tar -cvf kradio5.tar ./AppDir
#    - uses: actions/upload-artifact@v2
#      with:
#        name: kradio5
#        path: kradio5.tar
#    - uses: actions/upload-artifact@v2
#      with:
#        name: kradio5-latest-x86_64.AppImage
#        path: kradio5-latest-x86_64.AppImage
    - name: Set Env
      run: |
        export VERSION=$(egrep -o "KRADIO_VERSION \"[0-9.beta\-]+" CMakeLists.txt | cut -b 17-)
        export TAG=v${VERSION}.${GITHUB_RUN_ID}.${GITHUB_RUN_NUMBER}
        #export TAG=v${VERSION}
        #export RELEASE_TEXT=$(grep -Pzo "## ${VERSION}\n(\n|.)+?\n##" ../CHANGELOG.md | sed '$ d')
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "TAG=${TAG}" >> $GITHUB_ENV
        # add multiline release text
        #echo "RELEASE_TEXT<<EOF" >> $GITHUB_ENV
        #echo "${RELEASE_TEXT}" >> $GITHUB_ENV
        #echo "EOF" >> $GITHUB_ENV
    - name: Printenv
      run: |
        echo "VERSION=${VERSION}"
        echo "TAG=${TAG}"
#        echo "RELEASE_TEXT=${RELEASE_TEXT}"
    - name: Create draft release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: Release v${{ env.VERSION }}
#        body: ${{ env.RELEASE_TEXT }}
        draft: true
        prerelease: false
    - name: Release AppImage for Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./kradio5-latest-x86_64.AppImage
        asset_name: kradio5-latest-x86_64.AppImage
        asset_content_type: application/vnd.appimage
    - name: Bundle fat AppImage
      run: mv AppImageBuilder.fat.yml AppImageBuilder.yml && appimage-builder --skip-test
    - name: Release fat AppImage for Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./kradio5-latest-x86_64.AppImage
        asset_name: kradio5-latest-fat-x86_64.AppImage
        asset_content_type: application/vnd.appimage
    - name: Publish draft release
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
